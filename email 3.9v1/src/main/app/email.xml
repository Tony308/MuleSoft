<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ftp="http://www.mulesoft.org/schema/mule/ee/ftp" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:cors="http://www.mulesoft.org/schema/mule/cors" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/cors http://www.mulesoft.org/schema/mule/cors/current/mule-cors.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/ftp http://www.mulesoft.org/schema/mule/ee/ftp/current/mule-ftp-ee.xsd">
    <flow name="CheckUserExists">
        <http:request config-ref="NodeAPI" path="/existing" method="POST" doc:name="Validate existing username"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="248b2ade-0d78-4a61-8c7e-fd9a937b78bf">
            <dw:input-payload doc:sample="examples\existsExample.json" mimeType="application/json"/>
            <dw:set-variable variableName="exists"><![CDATA[%dw 1.0
%output application/json
---
payload[0].Exists]]></dw:set-variable>
        </dw:transform-message>
    </flow>
    <flow name="EmailChoice">
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'http.method' == 'GET']">
                <http:request config-ref="NodeAPI" path="/inbox/{id}" method="GET" doc:name="Get Email">
                    <http:request-builder>
                        <http:uri-param paramName="id" value="#[flowVars.id]"/>
                    </http:request-builder>
                </http:request>
                <dw:transform-message doc:name="Transform Message" metadata:id="4d936f52-47fe-43c9-a056-8a1ec5af7b4a">
                    <dw:input-payload mimeType="application/json"/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((item) -> {
	ID: item.id,
	To: item.recipient,
	From: item.origin,
	Subject: item.subject,
	Message: item.content,
	STATUS: item.STATUS,
	DELETED: item.DELETED
})]]></dw:set-payload>
                </dw:transform-message>
            </when>
                        <when expression="#[message.inboundProperties.'http.method' == 'PUT' &amp;&amp; message.inboundProperties.'http.request.path'.contains('delete')]">
                <http:request config-ref="NodeAPI" path="/delete/{id}" method="PUT" doc:name="Delete Email">
                    <http:request-builder>
                        <http:uri-param paramName="id" value="#[flowVars.id]"/>
                    </http:request-builder>
                </http:request>
                <dw:transform-message doc:name="Transform Message" metadata:id="14a12ee6-4531-4de7-837c-e6bec845d192">
                    <dw:input-payload mimeType="application/json" doc:sample="examples\accountCreationExample.json"/>
                    <dw:set-variable variableName="status"><![CDATA[%dw 1.0
%output application/json
---
payload.affectedRows]]></dw:set-variable>
                </dw:transform-message>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.status == 1]">
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
"Email deleted"]]></dw:set-payload>
                        </dw:transform-message>
                    </when>
                    <otherwise>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
"Error."]]></dw:set-payload>
                        </dw:transform-message>
                    </otherwise>
                </choice>
            </when>
            
            <when expression="#[message.inboundProperties.'http.method' == 'PUT' &amp;&amp; message.inboundProperties.'http.request.path'.contains('inbox')]">
                <http:request config-ref="NodeAPI" path="/inbox/update/{id}" method="PUT" doc:name="Update Status" sendBodyMode="ALWAYS">
                    <http:request-builder>
                        <http:uri-param paramName="id" value="#[flowVars.id]"/>
                    </http:request-builder>
                </http:request>
                <dw:transform-message doc:name="Transform Message" metadata:id="a5b2b5f2-d2d4-47cd-8a57-e4ee98bd439d">
                    <dw:input-payload mimeType="application/json"/>
                    <dw:set-variable variableName="status"><![CDATA[%dw 1.0
%output application/java
---
payload.affectedRows as :string]]></dw:set-variable>
                </dw:transform-message>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.status == 1]">
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
"Status updated"]]></dw:set-payload>
                        </dw:transform-message>
                    </when>
                    <otherwise>
                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
"Status not updated"]]></dw:set-payload>
                        </dw:transform-message>
                    </otherwise>
                </choice>
            </when>
            <when expression="#[message.inboundProperties.'http.request.path' == '/inbox']">
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-variable variableName="username"><![CDATA[%dw 1.0
%output application/java
---
payload.username as :string]]></dw:set-variable>
                </dw:transform-message>
                <flow-ref name="inboxFlow" doc:name="Inbox Flow"/>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
"Error."]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
    </flow>


    <flow name="createAccountFlow">
        <dw:transform-message doc:name="Transform Message" metadata:id="13f6abe1-231c-4113-a2be-0d58aab22ead">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-variable variableName="username"><![CDATA[%dw 1.0
%output application/java
---
payload.username as :string]]></dw:set-variable>
            <dw:set-variable variableName="password"><![CDATA[%dw 1.0
%output application/java
---
payload.password as :string
]]></dw:set-variable>
        </dw:transform-message>
        <set-payload value="username=#[flowVars.username]" mimeType="application/json" doc:name="Set payload"/>
        <flow-ref name="create-account-API" doc:name="create-account-API"/>
    </flow>
    
    <flow name="create-account-API">
        <flow-ref name="CheckUserExists" doc:name="CheckUserExists"/>


        <choice doc:name="Choice">
            <when expression="#[flowVars.exists == 1]">
                <set-payload value="username=#[flowVars.username]&amp;password=#[flowVars.password]" doc:name="Set username + password"/>
                <http:request config-ref="NodeAPI" path="/createAccount" method="POST" doc:name="Create-account request"/>

                <dw:transform-message doc:name="Transform Message" metadata:id="1fa4af10-6f9a-4d67-995b-452fc65f16a9">
                    <dw:input-payload mimeType="application/json"/>
                                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.affectedRows]]></dw:set-payload>
                    <dw:set-variable variableName="affectedRows"><![CDATA[%dw 1.0
%output application/json
---
payload.affectedRows]]></dw:set-variable>
                </dw:transform-message>

    
                <choice doc:name="Choice">
                    <when expression="#[flowVars.affectedRows==1]">

                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
"Account created."]]></dw:set-payload>
                        </dw:transform-message>
                    </when>
                    <otherwise>


                        <dw:transform-message doc:name="Transform Message">
                            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"Failed": payload
}	]]></dw:set-payload>
                        </dw:transform-message>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <set-payload value="Username already exists" mimeType="application/json" doc:name="Set Payload"/>
            </otherwise>
        </choice>
    </flow>

	<flow name="loginAPI"  >

        <http:request config-ref="NodeAPI" path="/login" method="POST" doc:name="Log In" metadata:id="1d860d2b-ea14-46e7-92d8-e87578dbb4b1">
            <http:request-builder>
                <http:header headerName="Content-Type" value="application/json"/>
            </http:request-builder>
        </http:request>

        <dw:transform-message doc:name="Transform Message" metadata:id="248b2ade-0d78-4a61-8c7e-fd9a937b78bf">
            <dw:input-payload doc:sample="examples\existsExample.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload[0].Exists as :number]]></dw:set-payload>

            <dw:set-variable variableName="exists"><![CDATA[%dw 1.0
%output application/json
---
payload[0].Exists]]></dw:set-variable>
        </dw:transform-message>

        <choice doc:name="Choice">
            <when expression="#[payload.Exists==1]">


                <flow-ref name="inboxFlow" doc:name="inboxFlow"/>

            </when>
            <otherwise>
                <set-payload value="You need to create an account" doc:name="Set Payload"/>

            </otherwise>
        </choice>
	</flow>
	<flow name="inboxAPI"  >
        <http:request config-ref="NodeAPI" path="/inbox" method="POST" doc:name="Get inbox">
            <http:request-builder>
                <http:header headerName="Content-Type" value="application/json"/>

            </http:request-builder>
        </http:request>
        <dw:transform-message doc:name="Transform Message" metadata:id="b87a4689-4314-4697-a03b-9451035814f2">
            <dw:input-payload doc:sample="examples\emailsExample.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((item, index) -> {
	"ID": item.id,
	"To": item.recipient,
	"From": item.origin,
	"Subject": item.subject,
	"Message": item.content,
	"STATUS": item.STATUS,
	"DELETED": item.DELETED
}	
)]]></dw:set-payload>
        </dw:transform-message>
	</flow>
	<flow  name="inboxFlow">
        <set-payload value="recipient=#[flowVars.username]" doc:name="Set Payload"/>
		<flow-ref doc:name="inboxAPI"  name="inboxAPI" />
	</flow>
	<flow name="ProjectFlow"  >
        <http:listener config-ref="muleAPI" path="/*" allowedMethods="POST,GET,OPTIONS,PUT" doc:name="LISTENER"/>

        <cors:validate config-ref="Cors_Configuration" publicResource="false" acceptsCredentials="true" doc:name="CORS Validate"/>
		
		<choice doc:name="Choice"  >
		   <when expression="#[message.inboundProperties.'http.request.path' == '/inbox']">
                <flow-ref name="EmailChoice" doc:name="Email choices"/>
            </when>
			<when expression="#[message.inboundProperties.'http.request.path' == '/login']">
				<flow-ref doc:name="loginFlow"  name="loginFlow"/>
			</when>
			<when expression="#[message.inboundProperties.'http.request.path' =='/createAccount']">
				<flow-ref doc:name="createAccountFlow"  name="createAccountFlow"/>
			</when>
            <when expression="#[message.inboundProperties.'http.request.path' =='/inbox/new']">
                <flow-ref name="NewEmailFlow" doc:name="New Email Flow"/>
            </when>

         

			<otherwise >
				<flow-ref doc:name="testFlow"  name="testFlow"/>
			</otherwise>
		</choice>
	</flow>

	<flow name="loginFlow"  >
        <dw:transform-message doc:name="Set username &amp; password variables" metadata:id="13f6abe1-231c-4113-a2be-0d58aab22ead">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-variable variableName="username"><![CDATA[%dw 1.0
%output application/java
---
payload.username as :string]]></dw:set-variable>
            <dw:set-variable variableName="password"><![CDATA[%dw 1.0
%output application/java
---
payload.password as :string
]]></dw:set-variable>

        </dw:transform-message>
        <set-payload value="username=#[payload.username]&amp;password=#[payload.password]" doc:name="Set Payload" mimeType="application/json"/>
		<flow-ref doc:name="loginAPI"  name="loginAPI" />
	
</flow>

<flow name="EmailsFlow">
        <http:listener config-ref="muleAPI" path="*/{id}" allowedMethods="GET,PUT,DELETE" doc:name="HTTP"/>

        <set-variable variableName="id" value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="Set id" mimeType="application/json"/>
        <flow-ref name="EmailChoice" doc:name="Email choices"/>

    </flow>
    <flow name="NewEmailFlow">
        <dw:transform-message doc:name="Map to Schema">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	recipient: payload[0].recipient,
	origin: payload[0].origin,
	subject: payload[0].subject,
	content: payload[0].message
}]]></dw:set-payload>
        </dw:transform-message>
        <dw:transform-message doc:name="Map to variables">
            <dw:set-variable variableName="recipient"><![CDATA[%dw 1.0
%output application/json
---
payload.recipient as :string]]></dw:set-variable>
            <dw:set-variable variableName="origin"><![CDATA[%dw 1.0
%output application/json
---
payload.origin as :string]]></dw:set-variable>
            <dw:set-variable variableName="subject"><![CDATA[%dw 1.0
%output application/json
---
payload.subject as :string]]></dw:set-variable>
            <dw:set-variable variableName="content"><![CDATA[%dw 1.0
%output application/json
---
payload.content]]></dw:set-variable>
        </dw:transform-message>
        <set-payload value="username=#[flowVars.recipient]" doc:name="Set Payload"/>
        <flow-ref name="CheckUserExists" doc:name="CheckUserExists"/>
        <choice doc:name="Choice">
            <when expression="#[flowVars.exists == 1]">
                <set-payload value="recipient=#[flowVars.recipient]&amp;origin=#[flowVars.origin]&amp;subject=#[flowVars.subject]&amp;content=#[flowVars.content]" mimeType="application/json" doc:name="Set Payload"/>
                <http:request config-ref="NodeAPI" path="/email/new" method="POST" doc:name="New Email"/>
                <dw:transform-message doc:name="Transform Message" metadata:id="ef925201-93f3-4a32-b6bc-8b905aaedfad">
                    <dw:input-payload mimeType="application/json"/>
                    <dw:input-variable variableName="exists"/>
                    <dw:set-variable variableName="status"><![CDATA[%dw 1.0
%output application/json
---
payload.affectedRows as :number]]></dw:set-variable>
                </dw:transform-message>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.status == 1]">
                        <set-payload value="Email sent." mimeType="application/json" doc:name="Set Payload"/>
                    </when>
                    <otherwise>
                        <set-payload value="Error
" mimeType="application/json" doc:name="Set Payload"/>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <set-payload value="Recipient doesn't exist." doc:name="Set Payload"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="testFlow">
        <http:listener config-ref="muleAPI" path="/test" allowedMethods="POST,GET" doc:name="HTTP"/>
        <logger level="INFO" doc:name="Logger"/>

    </flow>

</mule>
